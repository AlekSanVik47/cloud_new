spring:
  doc:
    api-docs:
      path: /v3/api-docs
    swagger-ui:
      path: /swagger-ui.html
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
  security:
    user:
      name: admin
      password: admin
  docker:
    compose:
      file: 'compose.yaml'
      lifecycle-management: start-only  # Только запуск (не пересоздаёт контейнеры)
      options:
        - "--no-recreate"  # Не пересоздаёт контейнеры, если они уже есть
        - "--no-build"      # Не пересобирает образы (если не нужно)
      profiles:
        active: local
  config:
    activate:
      on-profile: local
  application:
    name: cloud-storage

  datasource:
    url: jdbc:postgresql://localhost:5433/cloud-db
    username: cloud-storage
    password: cloud-storage
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
      show-sql: true
      open-in-view: false
      auto-commit: false
      properties:
        hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
        query:
          fail-on-pagination-over-collection-fetch: false // контролирует поведение при использовании пагинации с коллекциями
          in-clause-parameter-padding: true // оптимизирует запросы
  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.xml
#      file-extension: .xml

server:
  port: 8087
  address:

#  springdoc:
#    api-docs:
#      path: /v3/api-docs
#  swagger-ui:
#    path: /swagger-ui.html
#    enabled: true
#    operations-sorter: alpha
#    tags-sorter: alpha
#    doc-expansion: none

logging:
  level:
#    ru.storagecloud.cloud.services.userservice.UserServiceImpl: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.engine.transaction: DEBUG
#    org:
#      springdoc: INFO
#      springframework: INFO
#      org.springframework.security: INFO
#      hibernate: DEBUG
#    ru:
#      cloudstorage: INFO

#      liquibase: DEBUG
#      org.springframework.boot.autoconfigure.liquibase: DEBUG



